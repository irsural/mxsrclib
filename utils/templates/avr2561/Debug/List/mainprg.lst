##############################################################################
#                                                                            #
#                                                      13/Jul/2007  11:42:43 #
# IAR Atmel AVR C/C++ Compiler V4.11A/W32, Evaluation Version                #
# Copyright 1996-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Source file  =  S:\Files\ASUTP\U309M\prjs\avr\libtst\mainprg.cpp        #
#    Command line =  S:\Files\ASUTP\U309M\prjs\avr\libtst\mainprg.cpp        #
#                    --cpu=m2561 -ms -o S:\Files\ASUTP\U309M\prjs\avr\libtst #
#                    \Debug\Obj\ -lC S:\Files\ASUTP\U309M\prjs\avr\libtst\De #
#                    bug\List\ -y --initializers_in_flash -z2 --no_cse       #
#                    --no_inline --no_code_motion --no_cross_call            #
#                    --no_clustering --no_tbaa --debug                       #
#                    -DENABLE_BIT_DEFINITIONS -e -I                          #
#                    S:\Files\ASUTP\U309M\prjs\avr\libtst\..\mxsrclib\arch\c #
#                    ur\ -I S:\Files\ASUTP\U309M\prjs\avr\libtst\..\mxsrclib #
#                    \ -I "D:\Program Files\IAR Systems\Embedded Workbench   #
#                    4.0 Evaluation\avr\INC\" -I "D:\Program Files\IAR       #
#                    Systems\Embedded Workbench 4.0                          #
#                    Evaluation\avr\INC\DLIB\" --eeprom_size 4096 --eec++    #
#                    --dlib_config "D:\Program Files\IAR Systems\Embedded    #
#                    Workbench 4.0 Evaluation\avr\LIB\DLIB\dlAVR-5s-ec-n.h"  #
#    List file    =  S:\Files\ASUTP\U309M\prjs\avr\libtst\Debug\List\mainprg #
#                    .lst                                                    #
#    Object file  =  S:\Files\ASUTP\U309M\prjs\avr\libtst\Debug\Obj\mainprg. #
#                    r90                                                     #
#                                                                            #
#                                                                            #
##############################################################################

S:\Files\ASUTP\U309M\prjs\avr\libtst\mainprg.cpp
      1          //#include <irsstd.h>
      2          #include <irsdefs.h>
      3          #include <timer.h>
      4          
      5          #include "mainprg.h"
      6          #include "config.h"
      7          #include "hard.h"

   \                                 In segment ABSOLUTE, at 0x25
   \   <unnamed> volatile __io _A_PORTB
   \                     _A_PORTB:
   \   00000000                      DS 1
      8          

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
      9          counter_t action_to = 0;
   \                     action_to:
   \   00000000                      DS 2
     10          #define action_time TIME_TO_CNT(2, 1)
     11          
     12          // Инициализация

   \                                 In segment FARCODE, align 2, keep-with-next
     13          void init()
   \                     ??init:
     14          {
     15            cfg_init();
   \   00000000   ........           CALL    ??cfg_init
     16            init_to_cnt();
   \   00000004   ........           CALL    ??init_to_cnt
     17            set_to_cnt(action_to, action_time);
   \   00000008   E122               LDI     R18, 18
   \   0000000A   E73A               LDI     R19, 122
   \   0000000C   ....               LDI     R16, LOW(action_to)
   \   0000000E   ....               LDI     R17, (action_to) >> 8
   \   00000010   ........           CALL    ??set_to_cnt
     18          }
   \   00000014   9508               RET
     19          // Деинициализация

   \                                 In segment FARCODE, align 2, keep-with-next
     20          void deinit()
   \                     ??deinit:
     21          {
     22            deinit_to_cnt();
   \   00000000   ........           CALL    ??deinit_to_cnt
     23            cfg_deinit();
   \   00000004   ........           CALL    ??cfg_deinit
     24          }
   \   00000008   9508               RET
     25          // Элементарное действие

   \                                 In segment FARCODE, align 2, keep-with-next
     26          void tick()
   \                     ??tick:
     27          {
     28            cfg_tick();
   \   00000000   ........           CALL    ??cfg_tick
     29            if (test_to_cnt(action_to)) {
   \   00000004   ....               LDI     R30, LOW(action_to)
   \   00000006   ....               LDI     R31, (action_to) >> 8
   \   00000008   8100               LD      R16, Z
   \   0000000A   8111               LDD     R17, Z+1
   \   0000000C   ........           CALL    ??test_to_cnt
   \   00000010   2300               TST     R16
   \   00000012   F051               BREQ    ??tick_1
     30              set_to_cnt(action_to, action_time);
   \   00000014   E122               LDI     R18, 18
   \   00000016   E73A               LDI     R19, 122
   \   00000018   ....               LDI     R16, LOW(action_to)
   \   0000001A   ....               LDI     R17, (action_to) >> 8
   \   0000001C   ........           CALL    ??set_to_cnt
     31              test_action();
   \   00000020   E001               LDI     R16, 1
   \   00000022   B115               IN      R17, 0x05
   \   00000024   2710               EOR     R17, R16
   \   00000026   B915               OUT     0x05, R17
     32            }
     33          }
   \                     ??tick_1:
   \   00000028   9508               RET
     34          // Останов программы извне

   \                                 In segment FARCODE, align 2, keep-with-next
     35          void stop()
   \                     ??stop:
     36          {
     37          }
   \   00000000   9508               RET
     38          // Ожидание останова

   \                                 In segment FARCODE, align 2, keep-with-next
     39          irs_bool stopped()
   \                     ??stopped:
     40          {
     41            return irs_false;
   \   00000000   E000               LDI     R16, 0
   \   00000002   9508               RET
     42          }
     43          

   Maximum stack usage in bytes:

     Function                       CSTACK RSTACK
     --------                       ------ ------
     deinit()                           0      3
       -> deinit_to_cnt()               0      3
       -> cfg_deinit()                  0      3
     init()                             0      3
       -> cfg_init()                    0      3
       -> init_to_cnt()                 0      3
       -> set_to_cnt(irs_i16 &, irs_i16)
                                        0      3
     stop()                             0      3
     stopped()                          0      3
     tick()                             0      3
       -> cfg_tick()                    0      3
       -> test_to_cnt(irs_i16)          0      3
       -> set_to_cnt(irs_i16 &, irs_i16)
                                        0      3


   Segment part sizes:

     Function/Label Bytes
     -------------- -----
     _A_PORTB          1
     action_to         2
     init()           22
     deinit()         10
     tick()           42
     stop()            2
     stopped()         4
      Others           7

 
  1 byte  in segment ABSOLUTE
 80 bytes in segment FARCODE
  7 bytes in segment INITTAB
  2 bytes in segment NEAR_Z
 
 80 bytes of CODE memory (+ 7 bytes shared)
  2 bytes of DATA memory (+ 1 byte  shared)

Errors: none
Warnings: none
